// 0. Демонстрация решения TASK00
// Напишите программу, 
//  1 .которая на вход принимает число 
//  2.и выдаёт его квадрат (число
//  3. выводит результат
// умноженное на само себя).
// Например:
// 4 -> 16
// -3 -> 9
// -7 -> 49
// 1. Напишите программу, которая на вход принимает два TASK01
// числа и проверяет, является ли первое число квадратом
// второго.
// a = 25, b = 5 -> да
// a = 2, b = 10 -> нет
// a = 9, b = -3 -> да

// 3. Напишите программу, которая будет выдавать TASK02
// название дня недели по заданному номеру.
// 3 -> Среда
// 5 -> Пятница

// 5. Напишите программу, которая на вход принимает TASK05
// одно число (N), а на выходе показывает все целые
// числа в промежутке от -N до N.
// 4 -> "-4, -3, -2, -1, 0, 1, 2, 3, 4"
// 2 -> " -2, -1, 0, 1, 2"

// Задача 2: Напишите программу, TASK05HOMEWORK
//которая на вход принимает два числа и выдает, 
//какое число больше, а какое меньше.
// Задача 4:Напишите программу TASK06HOMEWORK
//которая на вход принимает три числа 
//и выдает максимальное из этих чисел
//Задача 6:Напишите программу которая на вход принимает число и выдает TASK07HOMEWORK
//является ли число четным(делится на 2 без остатка)
 //Задача 8:Напишите программу TASK08HOMEWORK
//которая на вход принимает число(N) 
//а на выходе показывает все четные числа от 1 до (N)

// Задача 9: Напишите программу, TASK09
//которая выводит случайное число
//из отрезка [10, 99] и 
//показывает наибольшую цифру числа.
//78 -> 8
//12-> 2

//11. Напишите программу, которая выводит случайное TASK10
//трёхзначное число и удаляет вторую цифру этого
//числа.
//456 -> 46
//782 -> 72

//12. Напишите программу, которая будет принимать на TASK11
//вход два числа и выводить, является ли первое число
//кратным второму. Если число 1 не кратно числу 2, то
//программа выводит остаток от деления.
//34, 5 -> не кратно, остаток 4
//16, 4 -> кратно

// 14. Напишите программу, которая принимает на TASK12
// вход число и проверяет, кратно ли оно
// одновременно 7 и 23.
// 14 -> нет
// 46 -> нет
// 161 -> да

// 16. Напишите программу, которая принимает на TASK13
// вход два числа и проверяет, является ли одно
// число квадратом другого.
// 5, 25 -> да
// -4, 16 -> да
// 25, 5 -> да
// 8,9 -> нет

//Задача 10 Напишите программу которая TASK14HOMEWORK
//принимает на вход трехзначное число
//и на выходе показывает вторую цифру этого числа.
//456->5
//782->8
//918->1

//Задача 13 Напишите программу которая TASK15HOMEWORK
//выводит третью цифру заданного числа 
//или сообщает что третьей цифры нет.
//645-> 5
 //78-> третьей цифры нет
 //32769 -> 6

 //Задача 15 Напишите программу TASK16HOMEWORK
//которая принимает на вход цифру обозначающую день недели и 
//проверяет является ли этот день выходным
//6->да
//7->да
//1->нет


//17. Напишите программу, которая TASK17
//принимает на вход координаты точки (X и Y), 
//причём X ≠ 0 и Y ≠ 0 
//и выдаёт номер четверти плоскости, в которой находится эта
//точка.

//Задача 18: Напишите программу,  TASK18
//которая по заданному номеру четверти,
// показывает диапазон
//возможных координат точек в этой четверти (x и y).
 
 //Задача 20: Напишите программу, TASK19
//которая принимает на вход координаты двух точек 
//и находит расстояние между ними в 2D пространстве(на плоскости).
//A (3,6); B (2,1) -> 5,09
//A (7,-5); B (1,-1) -> 7.21

// Задача 19    TASK19HOMEWORK
// Напишите программу, которая принимает на вход пятизначное число 
// и проверяет, является ли оно палиндромом.
// 14212 -> нет
// 12821 -> да
// 23432 -> да
 

 //Задача 22: Напишите программу, TASK20
//которая принимает на вход число (N) и 
//выдаёт таблицу квадратов чисел от 1 до N.
//5 -> 1, 4, 9, 16, 25.
//2 -> 1,4

// Задача 24: Напишите программу, TASK21
// которая
// принимает на вход число (А) и 
// выдаёт сумму чисел
// от 1 до А.
// 7 -> 28
// 4 -> 10
// 8 -> 36

//Задача 21   TASK21HOMEWORK
//Напишите программу, которая принимает на вход координаты двух точек 
//и находит расстояние между ними в 3D пространстве.
//A (3,6,8); B (2,1,-7), -> 15.84
//A (7,-5, 0); B (1,-1,9) -> 11.53

// Задача 26: Напишите программу, TASK22
// которая принимает на вход число 
// и выдаёт количество цифр в числе.
// 456 -> 3
// 78 -> 2
// 89126 -> 5

// Задача 28: Напишите программу, TASK23
// которая принимает на вход число N 
// и выдаёт произведение чисел от 1 до N.
// 4 -> 24
// 5 -> 120

//Задача 23   TASK23HOMEWORK
//Напишите программу, которая принимает на вход число (N) 
//и выдаёт таблицу кубов чисел от 1 до N.

//3 -> 1, 8, 27
//5 -> 1, 8, 27, 64, 125

// Задача 30: Напишите программу,  TASK24
// которая выводит массив из 8 элементов,
// заполненный нулями и единицами в случайном порядке.
// [1,0,1,1,0,1,0,0] первая задача с массивом


// Задача 25: Напишите цикл, TASK25HOMEWORK
// который принимает на вход два числа (A и B) 
// и возводит число A в натуральную степень B.
// 3, 5 -> 243 (3⁵)
// 2, 4 -> 16

// Задача 27: Напишите программу, TASK26HOMEWORK
// которая принимает на вход число 
// и выдаёт сумму цифр в числе.
// 452 -> 11
// 82 -> 10
// 9012 -> 12

// Задача 29: Напишите программу, TASK27HOMEWORK
// которая задаёт массив из 8 элементов 
// и выводит их на экран.
// 1, 2, 5, 7, 19 -> [1, 2, 5, 7, 19]
// 6, 1, 33 -> [6, 1, 33]

// Задача 31: Задайте массив из 12 элементов, заполненный TASK28
// случайными числами из промежутка [-9, 9]. Найдите сумму
// отрицательных и положительных элементов массива.
// Например, в массиве [3,9,-8,1,0,-7,2,-1,8,-3,-1,6] сумма
// положительных чисел равна 29, сумма отрицательных равна -20

// Задача 32: Напишите программу замена элементов TASK29
// массива: 
//положительные элементы замените на
// соответствующие отрицательные, 
//и наоборот.
// [-4, -8, 8, 2] -> [4, 8, -8, -2]


// Задача 33: Задайте массив. Напишите программу, которая TASK30
// определяет, присутствует ли заданное число в массиве.
// 4; массив [6, 7, 19, 345, 3] -> нет
// 3; массив [6, 7, 19, 345, 3] -> да

// Задача 35: Задайте одномерный массив из 123 случайных чисел. TASK31
// Найдите количество элементов массива, значения которых лежат в
// отрезке [10,99].
// Пример для массива из 5, а не 123 элементов. В своём решении сделайте для
// 123
// [5, 18, 123, 6, 2] -> 1
// [1, 2, 3, 6, 2] -> 0
// [10, 11, 12, 13, 14] -> 5

// Задача 37: Найдите произведение пар чисел в одномерном массиве. TASK32
// Парой считаем первый и последний элемент, второй и предпоследний
// и т.д. Результат запишите в новом массиве.
// [1 2 3 4 5] -> 5 8 3
// [6 7 3 6] -> 36 21


// Задача 34: Задайте массив заполненный случайными положительными трёхзначными числами.   TASK34HOMEWORK
// Напишите программу, которая покажет количество чётных чисел в массиве.
// [345, 897, 568, 234] -> 2

// Задача 36: Задайте одномерный массив, заполненный случайными числами. TASK35HOMEWORK
// Найдите сумму элементов, стоящих на нечётных позициях.
// [3, 7, 23, 12] -> 19
// [-4, -6, 89, 6] -> 0

// Задача 38: Задайте массив вещественных чисел. TASK36HOMEWORK
// Найдите разницу между максимальным и минимальным элементами массива.
// [3.5, 7.1, 22.9, 2.3, 78.5] -> 76.2


// Задача 39: Напишите программу, которая перевернёт TASK37
// одномерный массив (последний элемент будет на первом
// месте, а первый - на последнем и т.д.)
// [1 2 3 4 5] -> [5 4 3 2 1]
// [6 7 3 6] -> [6 3 7 6]

// Задача 40: Напишите программу, которая принимает на вход три TASK38
// числа и проверяет, может ли существовать треугольник с сторонами
// такой длины.
// Теорема о неравенстве треугольника: каждая сторона треугольника
// меньше суммы двух других 


// Задача 42: Напишите программу, которая будет преобразовывать TASK39
// десятичное число в двоичное.
// 45 -> 101101
//  3 -> 11
// 2->10

// Задача 44: Не используя рекурсию, выведите первые N чисел TASK40
// Фибоначчи. Первые два числа Фибоначчи: 0 и 1.
// Если N = 5 -> 0 1 1 2 3
// Если N = 3 -> 0 1 1
// Если N = 7 -> 0 1 1 2 3 5 8


// Задача 45: Напишите программу, которая будет создавать TASK41
// копию заданного массива с помощью поэлементного
// копирования.

// Задача 41: Пользователь вводит с клавиатуры M чисел.  TASK42HOMEWORK
// Посчитайте, сколько чисел больше 0 ввёл пользователь.
// 0, 7, 8, -2, -2 -> 2
// -1, -7, 567, 89, 223-> 3


// Задача 43: Напишите программу, которая найдёт точку пересечения двух прямых, заданных уравнениями TASK43HOMEWORK
//y = k1 * x + b1, y = k2 * x + b2; значения b1, k1, b2 и k2 задаются пользователем.
// b1 = 2, k1 = 5, b2 = 4, k2 = 9 -> (-0,5; -0,5)


// Задача 46: Задайте двумерный массив размером m×n, TASK44
// заполненный случайными целыми числами.
// m = 3, n = 4.
//        0   1   2   3 ИНДЕКСЫ

// 0      1   4   8   19
// 1      5   -2   33  -2
// 2      77   3   8   1



// Задача 48: Задайте двумерный массив размера m на n, TASK45
// каждый элемент в массиве находится по формуле: Amn = m+n.
// Выведите полученный массив на экран.
// m = 3, n = 4.
// 0 1 2 3
// 1 2 3 4
// 2 3 4 5

// Задача 49: Задайте двумерный массив. Найдите элементы, у TASK46
// которых оба индекса чётные, и замените эти элементы на их
// квадраты.

// Задача 51: Задайте двумерный массив. Найдите сумму TASK47
// элементов, находящихся на главной диагонали (с индексами
// (0,0); (1;1) и т.д.
// Например, задан массив:
// 1 4 7 2
// 5 9 2 3
// 8 4 2 4
// Сумма элементов главной диагонали: 1+9+2 = 12



// Задача 47. Задайте двумерный массив размером m×n,  TASK48HOMEWORK
//заполненный случайными вещественными числами.
// m = 3, n = 4.

// 0,5 7 -2 -0,2
// 1 -3,3 8 -9,9
// 8 7,8 -7,1 9

// Задача 50. Напишите программу, которая на вход принимает позиции элемента в двумерном массиве,  TASK49HOMEWORK
// и возвращает значение этого элемента или же указание, что такого элемента нет.

// Например, задан массив:
// 1 4 7 2
// 5 9 2 3
// 8 4 2 4
// 1, 7 -> такого элемента в массиве нет


// Задача 52. Задайте двумерный массив из целых чисел. TASK50HOMEWORK
// Найдите среднее арифметическое элементов в каждом столбце.

// Например, задан массив:
// 1 4 7 2
// 5 9 2 3
// 8 4 2 4
// Среднее арифметическое каждого столбца: 4,6; 5,6; 3,6; 3.



// Задача 53: Задайте двумерный массив. Напишите программу, TASK51
// которая поменяет местами первую и последнюю строку
// массива.


// Задача 55: Задайте двумерный массив. Напишите программу, TASK52
// которая заменяет строки на столбцы. В случае, если это
// невозможно, программа должна вывести сообщение для
// пользователя.


// Задача 57: Составить частотный словарь элементов TASK53
// двумерного массива. Частотный словарь содержит
// информацию о том, сколько раз встречается элемент
// входных данных.



// Задача 59: Задайте двумерный массив из целых чисел. TASK53
// Напишите программу, которая удалит строку и столбец, на
// пересечении которых расположен наименьший элемент
// массива.
// Например, задан массив:
// 1 4 7 2
// 5 9 2 3
// 8 4 2 4
// 5 2 6 7
// Наименьший элемент - 1, на выходе получим
// следующий массив:
// 9 4 2
// 2 2 6
// 3 4 7 




